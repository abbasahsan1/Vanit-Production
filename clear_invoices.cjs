const mysql = require('mysql2/promise');
require('dotenv').config();

async function clearInvoices() {
    let connection;
    
    try {
        // Create database connection
        connection = await mysql.createConnection({
            host: process.env.DB_HOST,
            user: process.env.DB_USER,
            password: process.env.DB_PASS,
            database: process.env.DB_NAME
        });

        console.log('üîó Connected to database');

        // First, let's see what invoice-related tables exist
        console.log('üîç Checking for invoice-related tables...');
        const [tables] = await connection.execute("SHOW TABLES LIKE '%invoice%'");
        console.log('üìã Invoice tables found:', tables);

        // Check what's in the main invoices table
        const [invoiceCount] = await connection.execute('SELECT COUNT(*) as count FROM invoices');
        console.log(`üìä Current invoices count: ${invoiceCount[0].count}`);

        if (invoiceCount[0].count > 0) {
            // Show some sample invoices
            const [sampleInvoices] = await connection.execute('SELECT id, student_id, amount, status, created_at FROM invoices LIMIT 5');
            console.log('üìù Sample invoices:', sampleInvoices);

            // Clear all invoices
            console.log('üóëÔ∏è  Clearing all invoices...');
            const [result] = await connection.execute('DELETE FROM invoices');
            console.log(`‚úÖ Deleted ${result.affectedRows} invoices`);

            // Reset auto increment
            await connection.execute('ALTER TABLE invoices AUTO_INCREMENT = 1');
            console.log('‚úÖ Auto increment reset');
        } else {
            console.log('‚ÑπÔ∏è  No invoices to clear');
        }

        // Check for invoice_items table if it exists
        try {
            const [itemCount] = await connection.execute('SELECT COUNT(*) as count FROM invoice_items');
            console.log(`üìä Invoice items count: ${itemCount[0].count}`);
            
            if (itemCount[0].count > 0) {
                const [itemResult] = await connection.execute('DELETE FROM invoice_items');
                console.log(`‚úÖ Deleted ${itemResult.affectedRows} invoice items`);
                await connection.execute('ALTER TABLE invoice_items AUTO_INCREMENT = 1');
            }
        } catch (error) {
            console.log('‚ÑπÔ∏è  No invoice_items table found');
        }

        console.log('üéâ Invoice cleanup completed!');
        
    } catch (error) {
        console.error('‚ùå Error:', error);
    } finally {
        if (connection) {
            await connection.end();
            console.log('üîê Database connection closed');
        }
    }
}

clearInvoices();
